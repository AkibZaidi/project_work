pkg load spreadsheetImportOptions
%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 7);

% Set up which table/path to use. Only change to following two lines.
% basePath = "C:\Users\mwillig\Nextcloud\PhD-Pairmotion\SurveyOverviewOSpaper\DSE, Design Space Exploration\DSE for NoC (mit Julian,Cornelia)\Matlab";
basePath = "C:/TUD_Course/ADS_Project_Work/Academic_Project/pw_zaidi/Sourcecode/temp/";
sheetNum = 12;

% Create table path from base path
tableSearchPath = basePath + "results.xlsx";

% specify sheet name and data ranges depending on the chosen sheet number
switch sheetNum
    case 1
        opts.Sheet = "Tabelle1";
        opts.DataRange = "A3:G13";
    case 2
        opts.Sheet = "Tabelle2";
        opts.DataRange = "A3:G17";
    case 3
        opts.Sheet = "Tabelle3";
        opts.DataRange = "A3:G22";
    case 4
        opts.Sheet = "Tabelle4";
        opts.DataRange = "A3:G194";
    case 5
        opts.Sheet = "Tabelle5";
        opts.DataRange = "A3:G185";
    case 6
        opts.Sheet = "Tabelle6";
        opts.DataRange = "A3:G66";
    case 7
        opts.Sheet = "Tabelle7";
        opts.DataRange = "A3:G66";
    case 8
        opts.Sheet = "Tabelle8";
        opts.DataRange = "A3:G34";
    case 9
        opts.Sheet = "Tabelle9";
        opts.DataRange = "A3:G198";
    case 10
        opts.Sheet = "Tabelle10";
        opts.DataRange = "A3:G27";
    case 11
        opts.Sheet = "Tabelle11";
        opts.DataRange = "A3:G4098";
    case 12
        opts.Sheet = "Tabelle12";
        opts.DataRange = "A3:G130";
    case 13
        opts.Sheet = "Tabelle13";
        opts.DataRange = "A3:G38";
    case 14
        opts.Sheet = "Tabelle14";
        opts.DataRange = "A3:G66";
    case 15
        opts.Sheet = "Tabelle15";
        opts.DataRange = "A3:G82";
    otherwise
        opts.Sheet = "Tabelle2";
        opts.DataRange = "A3:G17";        
end

% Specify column names and types
opts.VariableNames = ["buffersize", "packetlength", "injectionrate", "avglat", "minlat", "maxlat", "timeperflit"];
opts.VariableTypes = ["double", "double", "double", "int32", "int32", "int32", "double"];

% Import the data
NoCtable = readtable(tableSearchPath, opts, "UseExcel", false);

% Clear temporary variables
clear opts

% MatlabFrequenzwanne.Properties.VariableNames{1} = 'FrequencyCPU';
% MatlabFrequenzwanne.Properties.VariableNames{2} = 'FrequencyFPGA';
% MatlabFrequenzwanne.Properties.VariableNames{3} = 'Energy';
% scatter3(MatlabFrequenzwanne.FrequencyFPGA,MatlabFrequenzwanne.FrequencyCPU,MatlabFrequenzwanne.Energy);
 buffersize=NoCtable.buffersize;
 timeperflit=NoCtable.timeperflit;
 packetlength=NoCtable.packetlength;
%cftool('FitDSELowPower.sfit');



%Creating Estimate energy consumption - Model:
 %   For scattered data we use scatteredInterpolant and for data in regular griddata to fit Model with observed data
%Estimation_Model = scatteredInterpolant( buffersize(:),timeperflit(:),'nearest','nearest');
%Estimation_Model = scatteredInterpolant(buffersize(:),packetlength(:), timeperflit(:));
%Estimation_Model.Method = 'natural';

%o plot the resulting surface, create a mesh in x-y space from the smallest to the largest values. 
% Then plot the interpolated surface.
%linspace Generates linearly spaced vector
%xAxis = linspace(min(buffersize(:)),max(buffersize(:)));
%yAxis = linspace(min(packetlength(:)),max(packetlength(:)));
%zAxis = Estimation_Model(xAxis, yAxis);
%[XX,YY] = meshgrid(xAchse,yAchse);
%vEstimated = Estimation_Model(XX,YY);
%plot3_dse = plot3(buffersize(:),packetlength(:),timeperflit(:), '.', xAxis, yAxis, zAxis, '.'), grid on;
%[xq,yq] = meshgrid(0:.1:100, 0:.1:100);
%vg = griddata(buffersize, packetlength, timeperflit, xq, yq, 'natural');
%hold on;
%mesh(xq, yq, vq);
%fig1= figure('Name','Energy Estimation Model');
%plot3(buffersize,timeperflit,packetlength); %plot circles around observed/measured values 
%scatter(buffersize,timeperflit); 


[xq,yq] = meshgrid(0:1:600,0:1:128);
vq = griddata(buffersize, packetlength, timeperflit, xq, yq, 'cubic');
mesh_dse_plot = mesh(xq,yq,vq);
hold on;

plot3_dse = plot3(buffersize,packetlength,timeperflit,'o');
% Create zlabel
zlabel({'avg. latency'});

% Create ylabel
ylabel({'packet length'});

% Create xlabel
xlabel({'buffer size'});

% Create title
title({'PANACA NoC Simulator'});

colorbar();
%Using the geometry data, draw the teapot using the patch command. The patch command creates a patch object.
% Create axes
% wieder rein? axes1 = axes('Parent',fig1);
% noch rein view(axes1,[70.4305573421952 10.5803274720121]);
% noch rein view([70.4305573421952 10.5803274720121]);

%view(axes1,[51.8200123152709 20.2518032786885]);
%grid(axes1,'on');
grid('on');
hold('on');

% xlim([0.0 100.0])
% ylim([0.0 100.0])
% zlim([26.800 27.800])
% 

min_timeperflit=min(min(vq));
[row,col]=find(vq==min_timeperflit);

min_buffersize=xq(row,col);
min_packetlength=yq(row,col);

% set a template for data tip axis names
% x axis data tip display name
plot3_dse.DataTipTemplate.DataTipRows(1).Label = 'buffer size:';
% y axis data tip display name
plot3_dse.DataTipTemplate.DataTipRows(2).Label = 'packet length:';
% z axis data tip display name
plot3_dse.DataTipTemplate.DataTipRows(3).Label = 'avg latency per flit:';

% create a data tip at the suspected minimum
% the following if clause is a work around to fix the case when the minimum
% is reached on multiple settings. In this case, we will only ceate a data
% tip on the first coordinates of the minimum in the list of coordinates
if length(min_packetlength) == 1
    %datatip(plot3_dse, min_buffersize, min_packetlength, min_timeperflit);
else
   % datatip(plot3_dse, min_buffersize(1,1), min_packetlength(1,1), min_timeperflit);
end

% debugging output i guess? Will print multiple lines if the minimum is
% reached on multiple coordinates
fprintf('min_timeperflit: %8.5f min_buffersize: %8.3f min_packetlength: %8.3f \n', min_timeperflit, min_buffersize, min_packetlength);
disp(length(min_packetlength));
disp(min_timeperflit);
disp(length(min_buffersize));

fprintf('DSE finished \n');
%%

% Set the remaining axes properties
% set(axes1,'Colormap', [0.2422 0.1504 0.6603;0.252040973792314 0.168761336269031 0.71720917368096;0.260899731005021 0.188856809250486 0.770708627158244;0.268772254157556 0.208842457124636 0.822928477991375;0.274644976680434 0.232022327676547 0.867112775874636;0.278528290350664 0.258317226833293 0.901513838779559;0.280749628055151 0.285640913417153 0.928708209639213;0.28127814526644 0.312868520804989 0.950707992531179;0.279922433345481 0.339728656430191 0.968704954830742;0.27591527087585 0.366592917824749 0.982765144925292;0.268031037668043 0.394210065709022 0.991653635021866;0.253670194404964 0.422611667567622 0.996818079672822;0.228861268197279 0.451869505004859 0.998542992498785;0.199427186872368 0.481863229781139 0.990067985461208;0.183102590547052 0.509607867942177 0.978568451884921;0.1778213202796 0.535776556664035 0.963186847242468;0.173141794928329 0.561079641601879 0.942885944102284;0.157293639887026 0.585674603634192 0.925116214429462;0.146065464844509 0.608934920839407 0.908160381991011;0.13538149625243 0.631516884571388 0.8954294403618;0.118889373339812 0.653602412070781 0.883432609957078;0.101110714094388 0.674318716028911 0.865741730165816;0.0721675822299161 0.692958406709588 0.841876425813897;0.0269207502804102 0.709372426949708 0.813890300324952;0.00291612038386792 0.723847207531584 0.783476609037901;0.0229310641854951 0.736679239952826 0.751629960737569;0.0841239985200021 0.74797887654276 0.718497010066408;0.139743847685859 0.758297459885204 0.68446230901968;0.176455293537414 0.768775697534013 0.649231796825398;0.202996460901562 0.779507057293691 0.611175664751378;0.235466421647229 0.789264099611273 0.569242942844996;0.284937233339406 0.796600136287253 0.523637838890915;0.345453869302719 0.801038061038225 0.474677764637999;0.407928070645042 0.802885734669582 0.421244694178209;0.523859443735825 0.797734141156463 0.333465445719957;0.540795786179052 0.796194736514798 0.320510188066415;0.557619970344866 0.794558826170853 0.30751049353684;0.574341226010273 0.792821635843921 0.294495473257735;0.590949105461733 0.790913913244465 0.281581619152792;0.607466079181669 0.788840725335808 0.268933684461768;0.623896658766067 0.786639937457355 0.256579532069241;0.640205222736527 0.784287324166045 0.244679597457575;0.656346951357462 0.781746266881753 0.233506802009268;0.672339868291223 0.779115645854176 0.22283334540419;0.688171619806252 0.776406651904994 0.212662816340641;0.70367424746148 0.77361970051386 0.203243586863594;0.719007138345077 0.770780215910083 0.194168232914963;0.734169466974286 0.767888006984044 0.185420563412868;0.749062237872709 0.764912689848376 0.177130369910787;0.764138482686339 0.761802155790202 0.169759306078203;0.779858507729687 0.758495708186825 0.163172825196985;0.796833147076458 0.75486719024368 0.157592015367853;0.805572828130044 0.752992979478131 0.155266317025304;0.81097975490196 0.751832909663866 0.154110916929272;0.81373654300328 0.751241858574811 0.153845819770534;0.817048341007472 0.75052415904849 0.153666739962191;0.820823900064354 0.749699235435387 0.153587621130979;0.824887065396011 0.748806591346422 0.153605048844805;0.828927222942091 0.747913947257457 0.153767651570243;0.832952056066375 0.747021303168492 0.154068174091847;0.836959326977477 0.74614036624418 0.154468220708813;0.84094132902164 0.745282618511395 0.154979741170602;0.844888674911187 0.744458005663422 0.155631407520662;0.848822956687289 0.743638166244912 0.156343621008483;0.852745413637051 0.742820146386816 0.157112190173764;0.856642560496145 0.742005974820329 0.157988068334344;0.860517375530825 0.741202969166048 0.158919776055958;0.86437125521241 0.740410431188316 0.159905973900273;0.868194590785177 0.739633165264992 0.160976802767113;0.871985565203058 0.738872079919112 0.162158688650574;0.875757146622973 0.738120691072214 0.163410929399777;0.879510001168541 0.73737866566249 0.164734349716069;0.883210322066418 0.736662907076611 0.166317464399156;0.886892224995126 0.735960054397795 0.167988744834852;0.890556337158203 0.735271486913984 0.169743443362124;0.894177901307456 0.734624931847103 0.171688404616174;0.897768977167403 0.733998422242688 0.173739234691581;0.901321109990572 0.733394122098503 0.175915107702846;0.904795611840312 0.732829223386057 0.178325631469472;0.908237515497438 0.732290114987699 0.180862423467282;0.911654834219247 0.731773889555027 0.183501605900061;0.915044666172867 0.731285150890543 0.186259234325699;0.918386024887185 0.730844885465362 0.189163154001599;0.921696824748743 0.730435178892941 0.192149490714996;0.92497549743789 0.730055788682004 0.195216067455378;0.928192390625374 0.72972127707075 0.198396686827585;0.931374126968663 0.729411398566049 0.201634944771777;0.934527987998556 0.729128492712276 0.204912950284699;0.937649104614459 0.728891441481394 0.208226309810087;0.940742317439101 0.728707574236426 0.211556244827714;0.943829378246772 0.728565857801666 0.214859409077558;0.946916439054443 0.728471026112145 0.218115688582164;0.950003499862114 0.728439695144487 0.221260571476101;0.953090560669785 0.72843315159963 0.224284868865364;0.956177621477457 0.728452236429531 0.227186553243044;0.959264682285128 0.728520536289751 0.229906879269055;0.962351743092799 0.728685743449188 0.232398744793379;0.965434173478829 0.728919667949324 0.234719185999503;0.968503729033953 0.729223785606639 0.236847947705249;0.971538426407394 0.729615048718162 0.238697843957529;0.974532875004809 0.730081190010198 0.240392327269289;0.977479626407867 0.730629969880016 0.24194208507868;0.980164947329155 0.731572560403171 0.242978667082088;0.982745306104096 0.732594973417982 0.24369579148776;0.985204253211722 0.733702585640723 0.244038946089134;0.987394923682662 0.734981416827107 0.243555627078902;0.989426330153172 0.736355586593396 0.242763296173986;0.991334164696121 0.737802835948499 0.241756923602894;0.993094625364405 0.739336053397157 0.240529490219805;0.994370134924318 0.741047224653325 0.239102137932577;0.995375458044907 0.742852410404363 0.237588821597224;0.996129225830836 0.744742984477758 0.236006056025;0.996568238992616 0.746721148343438 0.234427059159761;0.996859021387305 0.748738773579822 0.232857677010251;0.997027651555082 0.750788684903241 0.231295286981965;0.997113879049932 0.75285926261304 0.229733159826276;0.997157156963524 0.754942457044516 0.228167274017864;0.99717182903676 0.757036587771214 0.226593777057153;0.997157450766348 0.759145073063414 0.225006000816849;0.997116663937608 0.761263687652366 0.223408095279794;0.997063057463816 0.763383717363658 0.221808774620398;0.996997854106556 0.765503747074951 0.220209453961002;0.996913390891507 0.767623776786243 0.218610133301606;0.996817184065266 0.769743806497535 0.21701081264221;0.996710626237441 0.77186511669536 0.215411491982814;0.99659211260539 0.773992497347856 0.213812171323419;0.996451253882221 0.776141473951392 0.2122132871128;0.996298561285346 0.778298029296085 0.210618552905757;0.996136793958542 0.780455252511084 0.209032225558339;0.995950304826194 0.782614367168998 0.207466837130632;0.995739610662051 0.784780354612896 0.205911908162755;0.995502542047799 0.786954606683503 0.204366824391568;0.995215116465939 0.789145542015863 0.202838731064483;0.994884791938459 0.791338633561702 0.20134922425606;0.994515632319855 0.793533732374596 0.199895220098838;0.994094513892384 0.795731673246612 0.198490332691363;0.993616900304443 0.797943333553166 0.197128221009817;0.993101903938953 0.800164417112672 0.195794468622114;0.992547855421144 0.802395648393869 0.194490390032259;0.991941808841503 0.804651460467074 0.19323689126533;0.991313076326432 0.806914789595784 0.192002252521619;0.990659335351725 0.80918362513417 0.190785608511271;0.989913152198287 0.811452921950419 0.189615416229219;0.989129105349574 0.813727098902116 0.188466595862528;0.988311273087308 0.816008158856376 0.187338109703896;0.987447718309341 0.818304459649203 0.186240105222398;0.986544381448966 0.820608392476314 0.185157364809466;0.985616341765951 0.822914389706141 0.184078753201967;0.98466365444994 0.825220386935967 0.183000141594467;0.98367768717109 0.827526384165794 0.181911250034118;0.982665957345882 0.82983238139562 0.180810106054716;0.981629936195095 0.832138378625447 0.179697558729622;0.980575180708304 0.834444375855274 0.178581753618416;0.979504775068686 0.836751412310775 0.177464909281535;0.978422336048217 0.83906250621618 0.17634400749475;0.977327000605392 0.841385227281332 0.175211478548219;0.976219501507944 0.843721329375474 0.17406435119833;0.975121251408235 0.846055009396068 0.172912818997797;0.9740428005354 0.848379523010416 0.171759820382883;0.973008253672462 0.85068635646406 0.170611093612214;0.971994269239157 0.852992353693887 0.169471811832545;0.971000299449573 0.855298623829615 0.168342400921785;0.970037237127408 0.857607264835368 0.167227258309722;0.969125303194225 0.859932053867289 0.166129605879067;0.96824772266937 0.862266368183852 0.165043617625035;0.967399905235436 0.864606142675061 0.163967550401311;0.966621189973191 0.866923997050286 0.162914911189646;0.965875198823547 0.869234334302673 0.161876419058076;0.965156429483794 0.8715403315325 0.160851734777207;0.964496055728236 0.873846328762327 0.1598659808858;0.963863274408404 0.876152325992153 0.15889670648061;0.96325730608007 0.87845832322198 0.157942682224448;0.962689730760494 0.880764320451806 0.157006753752193;0.962164288773109 0.883070317681633 0.156074972807518;0.961678426013874 0.88537631491146 0.155145034309895;0.961249718186978 0.887682312141286 0.154215196717223;0.960887503808199 0.889975822922764 0.153285359124551;0.960571854304637 0.89225840842648 0.15235535366465;0.960303811851092 0.894529034059804 0.151425115773199;0.960078919631532 0.896780173933911 0.150459790474269;0.959880586318711 0.899022119704722 0.149469315885555;0.959711855214992 0.90125934445883 0.148452599117021;0.959601127554881 0.903509764645849 0.147391944623117;0.959553615272443 0.905766312863327 0.14628475821541;0.959546416787869 0.908015119910025 0.145148956424782;0.959576509403191 0.910239066223459 0.14398829390089;0.959646915514486 0.912444049634615 0.142791712556782;0.95974571698445 0.914654280688256 0.141548569108879;0.959873421395875 0.916877937448081 0.140250681855404;0.960051358470954 0.919324182981924 0.138771214272076;0.960189598905579 0.920916196709427 0.137789146194494;0.960299920823843 0.921907432023678 0.137156897549525;0.960410242742107 0.922898667337929 0.136524648904557;0.960531970030115 0.923886100862266 0.135884796679758;0.960657799249347 0.924872167076194 0.135242209834144;0.960783628468579 0.925858233290122 0.13459962298853;0.960935417681144 0.92683564617294 0.133939729480694;0.961090617695752 0.927811922121742 0.133277562104828;0.961246218039239 0.928788064627586 0.132615127843044;0.961413828249077 0.929760203844646 0.131944687003693;0.961581438458915 0.930732343061705 0.131274246164341;0.961751561891311 0.931706995501323 0.130596265657314;0.961933084583169 0.932693047200403 0.129884087371902;0.962114607275027 0.933679098899483 0.12917190908649;0.962298034338383 0.934665604304625 0.128455951907165;0.96248534482597 0.935653034914286 0.127732288748097;0.962672655313556 0.936640465523947 0.12700862558903;0.962868967441789 0.937623395313285 0.126275960789316;0.963075132717215 0.938601398529027 0.125533442842408;0.963281297992641 0.939579401744768 0.124790924895501;0.963495272794864 0.94055350019711 0.124040362386605;0.963713917211049 0.941525263842472 0.123284989727241;0.963932561627234 0.942497027487834 0.122529617067878;0.964166797799734 0.943460995255039 0.121750856774041;0.964405581567826 0.944422689224447 0.120965275086817;0.964644365335918 0.945384383193855 0.120179693399592;0.964894802724481 0.946340250353028 0.119376631281661;0.965146218039238 0.947295628549104 0.118572102274439;0.965398949803906 0.948251664970136 0.117764940367394;0.96566891509469 0.949216318154225 0.116923311408118;0.965938880385474 0.950180971338314 0.116081682448842;0.966212239318005 0.951147157173321 0.115233156759434;0.966497675622637 0.952118797442473 0.114360086824554;0.966783111927269 0.953090437711625 0.113487016889675;0.967071023598799 0.954059602613879 0.112606520854101;0.967363191164293 0.955024511622169 0.111713257136633;0.967655358729788 0.955989420630458 0.110819993419165;0.967952445424167 0.956949410509863 0.109911972315045;0.968254143801875 0.957904788705939 0.108990116160936;0.968555842179584 0.958860166902015 0.108068260006828;0.968862421104773 0.959820425645572 0.107122001115313;0.969171463995681 0.960783148354848 0.106163422395204;0.969480506886589 0.961745871064124 0.105204843675096;0.969796260553696 0.962715304549598 0.104212711073998;0.97011355876453 0.9636862825788 0.103212855754259;0.970430856975364 0.964657260608002 0.102213000434521;0.970749271424849 0.965624896897744 0.101194189987201;0.971067730823541 0.966592398620797 0.100174616246154;0.971386190222232 0.967558570666698 0.0991510534736497;0.971704649620925 0.968513948862774 0.0980951091516711;0.972023109019617 0.96946932705885 0.0970391648296925;0.972341568418308 0.970425817747809 0.0959798830290648;0.972660027817 0.971385506853806 0.0949110059773209;0.972978487215692 0.972345195959804 0.0938421289255769;0.973296946614384 0.973309449868512 0.0927595574657018;0.973615406013076 0.974280369838321 0.0916569878225237;0.973933865411768 0.97525128980813 0.0905544181793457;0.974254662309711 0.97622054876426 0.0894474815802028;0.974577334643099 0.977188475046623 0.0883370412605766;0.974900006976487 0.978156401328987 0.0872266009409503;0.975229627872063 0.979117379049163 0.0861092120591369;0.975562181188378 0.980075424348599 0.0849888907565838;0.975894734504693 0.981033469648036 0.0838685694540308;0.976229559160644 0.981989243607836 0.0827459768118415;0.97656477958032 0.982944621803912 0.0816229884059277;0.976899999999996 0.983899999999988 0.0805000000000139],...
%    'ContextMenu');
% colormap("jet");
% colorbar; %Color to Energy - legende
% 
% 
% %Get the current color limits.
% %lim = caxis;
% %Hold the current color limits using the 'manual' option - than set colors
% %caxis('manual');
% 
% %dark blue for lowest Energy consumption, fire red for highest Energy consumption
% % wieder rein? caxis([26.9 27.4]) %set scaling for color mapping
% 
% %hold on % hold on preserves existings plots
% 
% 
% 
% %surf(XX,YY,ZZ,'LineStyle','none') % for background colour 
% surface=surf(XX,YY,vEstimated);
% %surface=surf(XX,YY,ZZ);
% %surface.FaceAlpha = 0.3; %make the object semi-transparent
% surface.FaceAlpha = 0.9; % no transparency 
% surface.EdgeColor ='#7F7F7F'; %light grey
% surface.LineWidth = 0.1;
% surface.EdgeAlpha =0.5; % semitransparent edges
% title('NoC - DSE');
% xlabel('buffersize');
% ylabel('timeperflit');
%legend('Observed data','Estimated Energy Consumption','Location','NorthWest');

%%

%mesh(xq,yq,z2)


% mesh1=mesh(XX,YY,ZZ); % for data mesh
% mesh1.FaceColor = 'flat'; %filled mesh






% The following line demonstrates an alternative way to create a data tip.
% datatip(mesh1,82.3863636363636,99.0056868686869,27.1515915047611);
% Create datatip
% datatip(mesh1,'DataIndex',8199);
% 
% % The following line demonstrates an alternative way to create a data tip.
% % datatip(mesh1,57.9229797979798,71.1649191919192,27.1005837513201);
% % Create datatip
% datatip(mesh1,'DataIndex',5671);
% 
% % The following line demonstrates an alternative way to create a data tip.
% % datatip(mesh1,88.2575757575758,43.3241515151515,27.1129519879481);
% % Create datatip
% datatip(mesh1,'DataIndex',8743);
% 
% % The following line demonstrates an alternative way to create a data tip.
% % datatip(mesh1,76.5151515151515,23.4378888888889,27.0530852207022);
% % Create datatip
% datatip(mesh1,'DataIndex',7523);
% 
% % The following line demonstrates an alternative way to create a data tip.
% % datatip(mesh1,5.08207070707071,54.261595959596,27.2180082197913);
% % Create datatip
% datatip(mesh1,'DataIndex',254);

% Uncomment the following line to preserve the X-limits of the axes
% xlim(axes1,[0 100]);
% Uncomment the following line to preserve the Y-limits of the axes
% ylim(axes1,[0 100]);
% Uncomment the following line to preserve the Z-limits of the axes
% zlim(axes1,[26.8 27.8]);


%hold on retains plots in the current axes so that new plots added to the axes do not delete existing plots. New plots use the next colors and line styles based on the ColorOrder and LineStyleOrder properties of the axes. MATLAB® adjusts axes limits, tick marks, and tick labels to display the full range of data. If axes do not exist, then the hold command creates them.
%hold off sets the hold state to off so that new plots added to the axes clear existing plots and reset all axes properties. The next plot added to the axes uses the first color and line style based on the ColorOrder and LineStyleOrder properties of the axes. This option is the default behavior.
hold off % hold on preserves existings plots




% axes1 = axes('Parent',Parent1);
% hold(axes1,'on');
% 
% % Create mesh
% mesh(xdata1,ydata1,ZZ1);
% 
% % Uncomment the following line to preserve the X-limits of the axes
% % xlim(axes1,[0.703460866754706 91.6125517758456]);
% % Uncomment the following line to preserve the Y-limits of the axes
% % ylim(axes1,[3.95290582830256 94.8619967373935]);
% % Uncomment the following line to preserve the Z-limits of the axes
% % zlim(axes1,[26.806396484375 27.7154873934659]);
% view(axes1,[51.2874996550697 9.6236133858708]);
% grid(axes1,'on');
% hold(axes1,'off');
% % Set the remaining axes properties
% set(axes1,'ContextMenu');



%damit macht man plot der observed werte (mo bedeutet magenta o - Kringel
%um Punkte) und mesh() !!!!!! macht dann die interpolierten Werte!!!!!!
%besser mesh als surf?!?!?
%figure
%plot3(FrequencyFPGA,FrequencyCPU,Energy,'mo')
%hold on
%mesh(xq,yq,z2)
% title('v4')
% legend('Measured Energy','Interpolated Surface','Location','NorthWest')
% xlabel('Frequency FPGA');
% ylabel('Frequency CPU');



% 
% [xq,yq] = meshgrid(0:.1:100, 0:.1:100);
% figure
% vqnatural = griddata(FrequencyFPGA,FrequencyCPU,Energy,xq,yq,'natural');  %  method can be 'linear', 'nearest', 'natural', 'cubic', or 'v4'
% mesh(xq,yq,vqnatural);
% hold on;
% xlabel('Frequency FPGA');
% ylabel('Frequency CPU');
% title('Natural');
% plot3(FrequencyFPGA,FrequencyCPU,Energy,'o');




%Explore Design Space and plot the results.

%figure
%vEnergyEstimated = Energy_Consumption_Estimation_Model(xCPUFreq,yFPGAFreq);
%surf: Surface-Plot
%surf(xCPUFreq,yFPGAFreq,vEnergyEstimated);


% 
% 
% %Find best Design
% N=min(min(vEstimated));
% [row,col]=find(vEstimated==N);
% minEnergy_FPGAFrequency=xCPUFreq(row,col);
% minEnergy_CPUVFrequency=yFPGAFreq(row,col);
% fprintf('DSE with scatteredInterpolant Energy_Consumption_Estimation_Model algorithm succeded\n'); 
% %fprintf('Minimum energy consumption is %8.5f Joule estimated at CPU/FPGA frequency combination: %8.3f Mhz / %8.3f Mhz \n',N, minEnergy_CPUVFrequency,minEnergy_FPGAFrequency);
% 
% fprintf('DSE finished \n')
% 
% 
% 
% 
% %Creating Estimate energy consumption - Model:
%  %   For scattered data we use scatteredInterpolant and for data in regular griddata to fit Model with observed data
% Energy_Consumption_Estimation_Model = scatteredInterpolant(FrequencyCPU(:),FrequencyFPGA(:),Energy(:),'linear','linear');
% 
% 
% 
% %Create a grid of query points that extend Design Space beyond observed/measured Data
% %[xCPUFreq,yFPGAFreq] = ndgrid(1:100);
% [xCPUFreq,yFPGAFreq]= meshgrid(1:100);
% 
% %o plot the resulting surface, create a mesh in x-y space from the smallest to the largest values. 
% % Then plot the interpolated surface.
% %linspace Generates linearly spaced vector
% sgr = linspace(min(FrequencyCPU(:)),max(FrequencyCPU(:)))
% ygr = linspace(min(FrequencyFPGA(:)),max(FrequencyFPGA(:)))
% [XX,YY] = meshgrid(sgr,ygr);
% vEstimated = Energy_Consumption_Estimation_Model(XX,YY);
% 
% fig1= figure('Name','Energy Estimation Model');
% plot3(FrequencyFPGA,FrequencyCPU,Energy,'mo'); %plot circles around observed/measured values 
% 
% 
% 
% 
% %Using the geometry data, draw the teapot using the patch command. The patch command creates a patch object.
% % Create axes
% %axes1 = axes('Parent',fig1);
% %view(axes1,[70.4305573421952 10.5803274720121]);
% view([70.4305573421952 10.5803274720121]);
% 
% %view(axes1,[51.8200123152709 20.2518032786885]);
% %grid(axes1,'on');
% grid('on');
% hold('on');
% 
%  xlim([0.0 100.0])
%  ylim([0.0 100.0])
%  zlim([26.800 27.800])
% % 
% 
% 
% 
% % Set the remaining axes properties
% %set(axes1,'Colormap', [0.2422 0.1504 0.6603;0.252040973792314 0.168761336269031 0.71720917368096;0.260899731005021 0.188856809250486 0.770708627158244;0.268772254157556 0.208842457124636 0.822928477991375;0.274644976680434 0.232022327676547 0.867112775874636;0.278528290350664 0.258317226833293 0.901513838779559;0.280749628055151 0.285640913417153 0.928708209639213;0.28127814526644 0.312868520804989 0.950707992531179;0.279922433345481 0.339728656430191 0.968704954830742;0.27591527087585 0.366592917824749 0.982765144925292;0.268031037668043 0.394210065709022 0.991653635021866;0.253670194404964 0.422611667567622 0.996818079672822;0.228861268197279 0.451869505004859 0.998542992498785;0.199427186872368 0.481863229781139 0.990067985461208;0.183102590547052 0.509607867942177 0.978568451884921;0.1778213202796 0.535776556664035 0.963186847242468;0.173141794928329 0.561079641601879 0.942885944102284;0.157293639887026 0.585674603634192 0.925116214429462;0.146065464844509 0.608934920839407 0.908160381991011;0.13538149625243 0.631516884571388 0.8954294403618;0.118889373339812 0.653602412070781 0.883432609957078;0.101110714094388 0.674318716028911 0.865741730165816;0.0721675822299161 0.692958406709588 0.841876425813897;0.0269207502804102 0.709372426949708 0.813890300324952;0.00291612038386792 0.723847207531584 0.783476609037901;0.0229310641854951 0.736679239952826 0.751629960737569;0.0841239985200021 0.74797887654276 0.718497010066408;0.139743847685859 0.758297459885204 0.68446230901968;0.176455293537414 0.768775697534013 0.649231796825398;0.202996460901562 0.779507057293691 0.611175664751378;0.235466421647229 0.789264099611273 0.569242942844996;0.284937233339406 0.796600136287253 0.523637838890915;0.345453869302719 0.801038061038225 0.474677764637999;0.407928070645042 0.802885734669582 0.421244694178209;0.523859443735825 0.797734141156463 0.333465445719957;0.540795786179052 0.796194736514798 0.320510188066415;0.557619970344866 0.794558826170853 0.30751049353684;0.574341226010273 0.792821635843921 0.294495473257735;0.590949105461733 0.790913913244465 0.281581619152792;0.607466079181669 0.788840725335808 0.268933684461768;0.623896658766067 0.786639937457355 0.256579532069241;0.640205222736527 0.784287324166045 0.244679597457575;0.656346951357462 0.781746266881753 0.233506802009268;0.672339868291223 0.779115645854176 0.22283334540419;0.688171619806252 0.776406651904994 0.212662816340641;0.70367424746148 0.77361970051386 0.203243586863594;0.719007138345077 0.770780215910083 0.194168232914963;0.734169466974286 0.767888006984044 0.185420563412868;0.749062237872709 0.764912689848376 0.177130369910787;0.764138482686339 0.761802155790202 0.169759306078203;0.779858507729687 0.758495708186825 0.163172825196985;0.796833147076458 0.75486719024368 0.157592015367853;0.805572828130044 0.752992979478131 0.155266317025304;0.81097975490196 0.751832909663866 0.154110916929272;0.81373654300328 0.751241858574811 0.153845819770534;0.817048341007472 0.75052415904849 0.153666739962191;0.820823900064354 0.749699235435387 0.153587621130979;0.824887065396011 0.748806591346422 0.153605048844805;0.828927222942091 0.747913947257457 0.153767651570243;0.832952056066375 0.747021303168492 0.154068174091847;0.836959326977477 0.74614036624418 0.154468220708813;0.84094132902164 0.745282618511395 0.154979741170602;0.844888674911187 0.744458005663422 0.155631407520662;0.848822956687289 0.743638166244912 0.156343621008483;0.852745413637051 0.742820146386816 0.157112190173764;0.856642560496145 0.742005974820329 0.157988068334344;0.860517375530825 0.741202969166048 0.158919776055958;0.86437125521241 0.740410431188316 0.159905973900273;0.868194590785177 0.739633165264992 0.160976802767113;0.871985565203058 0.738872079919112 0.162158688650574;0.875757146622973 0.738120691072214 0.163410929399777;0.879510001168541 0.73737866566249 0.164734349716069;0.883210322066418 0.736662907076611 0.166317464399156;0.886892224995126 0.735960054397795 0.167988744834852;0.890556337158203 0.735271486913984 0.169743443362124;0.894177901307456 0.734624931847103 0.171688404616174;0.897768977167403 0.733998422242688 0.173739234691581;0.901321109990572 0.733394122098503 0.175915107702846;0.904795611840312 0.732829223386057 0.178325631469472;0.908237515497438 0.732290114987699 0.180862423467282;0.911654834219247 0.731773889555027 0.183501605900061;0.915044666172867 0.731285150890543 0.186259234325699;0.918386024887185 0.730844885465362 0.189163154001599;0.921696824748743 0.730435178892941 0.192149490714996;0.92497549743789 0.730055788682004 0.195216067455378;0.928192390625374 0.72972127707075 0.198396686827585;0.931374126968663 0.729411398566049 0.201634944771777;0.934527987998556 0.729128492712276 0.204912950284699;0.937649104614459 0.728891441481394 0.208226309810087;0.940742317439101 0.728707574236426 0.211556244827714;0.943829378246772 0.728565857801666 0.214859409077558;0.946916439054443 0.728471026112145 0.218115688582164;0.950003499862114 0.728439695144487 0.221260571476101;0.953090560669785 0.72843315159963 0.224284868865364;0.956177621477457 0.728452236429531 0.227186553243044;0.959264682285128 0.728520536289751 0.229906879269055;0.962351743092799 0.728685743449188 0.232398744793379;0.965434173478829 0.728919667949324 0.234719185999503;0.968503729033953 0.729223785606639 0.236847947705249;0.971538426407394 0.729615048718162 0.238697843957529;0.974532875004809 0.730081190010198 0.240392327269289;0.977479626407867 0.730629969880016 0.24194208507868;0.980164947329155 0.731572560403171 0.242978667082088;0.982745306104096 0.732594973417982 0.24369579148776;0.985204253211722 0.733702585640723 0.244038946089134;0.987394923682662 0.734981416827107 0.243555627078902;0.989426330153172 0.736355586593396 0.242763296173986;0.991334164696121 0.737802835948499 0.241756923602894;0.993094625364405 0.739336053397157 0.240529490219805;0.994370134924318 0.741047224653325 0.239102137932577;0.995375458044907 0.742852410404363 0.237588821597224;0.996129225830836 0.744742984477758 0.236006056025;0.996568238992616 0.746721148343438 0.234427059159761;0.996859021387305 0.748738773579822 0.232857677010251;0.997027651555082 0.750788684903241 0.231295286981965;0.997113879049932 0.75285926261304 0.229733159826276;0.997157156963524 0.754942457044516 0.228167274017864;0.99717182903676 0.757036587771214 0.226593777057153;0.997157450766348 0.759145073063414 0.225006000816849;0.997116663937608 0.761263687652366 0.223408095279794;0.997063057463816 0.763383717363658 0.221808774620398;0.996997854106556 0.765503747074951 0.220209453961002;0.996913390891507 0.767623776786243 0.218610133301606;0.996817184065266 0.769743806497535 0.21701081264221;0.996710626237441 0.77186511669536 0.215411491982814;0.99659211260539 0.773992497347856 0.213812171323419;0.996451253882221 0.776141473951392 0.2122132871128;0.996298561285346 0.778298029296085 0.210618552905757;0.996136793958542 0.780455252511084 0.209032225558339;0.995950304826194 0.782614367168998 0.207466837130632;0.995739610662051 0.784780354612896 0.205911908162755;0.995502542047799 0.786954606683503 0.204366824391568;0.995215116465939 0.789145542015863 0.202838731064483;0.994884791938459 0.791338633561702 0.20134922425606;0.994515632319855 0.793533732374596 0.199895220098838;0.994094513892384 0.795731673246612 0.198490332691363;0.993616900304443 0.797943333553166 0.197128221009817;0.993101903938953 0.800164417112672 0.195794468622114;0.992547855421144 0.802395648393869 0.194490390032259;0.991941808841503 0.804651460467074 0.19323689126533;0.991313076326432 0.806914789595784 0.192002252521619;0.990659335351725 0.80918362513417 0.190785608511271;0.989913152198287 0.811452921950419 0.189615416229219;0.989129105349574 0.813727098902116 0.188466595862528;0.988311273087308 0.816008158856376 0.187338109703896;0.987447718309341 0.818304459649203 0.186240105222398;0.986544381448966 0.820608392476314 0.185157364809466;0.985616341765951 0.822914389706141 0.184078753201967;0.98466365444994 0.825220386935967 0.183000141594467;0.98367768717109 0.827526384165794 0.181911250034118;0.982665957345882 0.82983238139562 0.180810106054716;0.981629936195095 0.832138378625447 0.179697558729622;0.980575180708304 0.834444375855274 0.178581753618416;0.979504775068686 0.836751412310775 0.177464909281535;0.978422336048217 0.83906250621618 0.17634400749475;0.977327000605392 0.841385227281332 0.175211478548219;0.976219501507944 0.843721329375474 0.17406435119833;0.975121251408235 0.846055009396068 0.172912818997797;0.9740428005354 0.848379523010416 0.171759820382883;0.973008253672462 0.85068635646406 0.170611093612214;0.971994269239157 0.852992353693887 0.169471811832545;0.971000299449573 0.855298623829615 0.168342400921785;0.970037237127408 0.857607264835368 0.167227258309722;0.969125303194225 0.859932053867289 0.166129605879067;0.96824772266937 0.862266368183852 0.165043617625035;0.967399905235436 0.864606142675061 0.163967550401311;0.966621189973191 0.866923997050286 0.162914911189646;0.965875198823547 0.869234334302673 0.161876419058076;0.965156429483794 0.8715403315325 0.160851734777207;0.964496055728236 0.873846328762327 0.1598659808858;0.963863274408404 0.876152325992153 0.15889670648061;0.96325730608007 0.87845832322198 0.157942682224448;0.962689730760494 0.880764320451806 0.157006753752193;0.962164288773109 0.883070317681633 0.156074972807518;0.961678426013874 0.88537631491146 0.155145034309895;0.961249718186978 0.887682312141286 0.154215196717223;0.960887503808199 0.889975822922764 0.153285359124551;0.960571854304637 0.89225840842648 0.15235535366465;0.960303811851092 0.894529034059804 0.151425115773199;0.960078919631532 0.896780173933911 0.150459790474269;0.959880586318711 0.899022119704722 0.149469315885555;0.959711855214992 0.90125934445883 0.148452599117021;0.959601127554881 0.903509764645849 0.147391944623117;0.959553615272443 0.905766312863327 0.14628475821541;0.959546416787869 0.908015119910025 0.145148956424782;0.959576509403191 0.910239066223459 0.14398829390089;0.959646915514486 0.912444049634615 0.142791712556782;0.95974571698445 0.914654280688256 0.141548569108879;0.959873421395875 0.916877937448081 0.140250681855404;0.960051358470954 0.919324182981924 0.138771214272076;0.960189598905579 0.920916196709427 0.137789146194494;0.960299920823843 0.921907432023678 0.137156897549525;0.960410242742107 0.922898667337929 0.136524648904557;0.960531970030115 0.923886100862266 0.135884796679758;0.960657799249347 0.924872167076194 0.135242209834144;0.960783628468579 0.925858233290122 0.13459962298853;0.960935417681144 0.92683564617294 0.133939729480694;0.961090617695752 0.927811922121742 0.133277562104828;0.961246218039239 0.928788064627586 0.132615127843044;0.961413828249077 0.929760203844646 0.131944687003693;0.961581438458915 0.930732343061705 0.131274246164341;0.961751561891311 0.931706995501323 0.130596265657314;0.961933084583169 0.932693047200403 0.129884087371902;0.962114607275027 0.933679098899483 0.12917190908649;0.962298034338383 0.934665604304625 0.128455951907165;0.96248534482597 0.935653034914286 0.127732288748097;0.962672655313556 0.936640465523947 0.12700862558903;0.962868967441789 0.937623395313285 0.126275960789316;0.963075132717215 0.938601398529027 0.125533442842408;0.963281297992641 0.939579401744768 0.124790924895501;0.963495272794864 0.94055350019711 0.124040362386605;0.963713917211049 0.941525263842472 0.123284989727241;0.963932561627234 0.942497027487834 0.122529617067878;0.964166797799734 0.943460995255039 0.121750856774041;0.964405581567826 0.944422689224447 0.120965275086817;0.964644365335918 0.945384383193855 0.120179693399592;0.964894802724481 0.946340250353028 0.119376631281661;0.965146218039238 0.947295628549104 0.118572102274439;0.965398949803906 0.948251664970136 0.117764940367394;0.96566891509469 0.949216318154225 0.116923311408118;0.965938880385474 0.950180971338314 0.116081682448842;0.966212239318005 0.951147157173321 0.115233156759434;0.966497675622637 0.952118797442473 0.114360086824554;0.966783111927269 0.953090437711625 0.113487016889675;0.967071023598799 0.954059602613879 0.112606520854101;0.967363191164293 0.955024511622169 0.111713257136633;0.967655358729788 0.955989420630458 0.110819993419165;0.967952445424167 0.956949410509863 0.109911972315045;0.968254143801875 0.957904788705939 0.108990116160936;0.968555842179584 0.958860166902015 0.108068260006828;0.968862421104773 0.959820425645572 0.107122001115313;0.969171463995681 0.960783148354848 0.106163422395204;0.969480506886589 0.961745871064124 0.105204843675096;0.969796260553696 0.962715304549598 0.104212711073998;0.97011355876453 0.9636862825788 0.103212855754259;0.970430856975364 0.964657260608002 0.102213000434521;0.970749271424849 0.965624896897744 0.101194189987201;0.971067730823541 0.966592398620797 0.100174616246154;0.971386190222232 0.967558570666698 0.0991510534736497;0.971704649620925 0.968513948862774 0.0980951091516711;0.972023109019617 0.96946932705885 0.0970391648296925;0.972341568418308 0.970425817747809 0.0959798830290648;0.972660027817 0.971385506853806 0.0949110059773209;0.972978487215692 0.972345195959804 0.0938421289255769;0.973296946614384 0.973309449868512 0.0927595574657018;0.973615406013076 0.974280369838321 0.0916569878225237;0.973933865411768 0.97525128980813 0.0905544181793457;0.974254662309711 0.97622054876426 0.0894474815802028;0.974577334643099 0.977188475046623 0.0883370412605766;0.974900006976487 0.978156401328987 0.0872266009409503;0.975229627872063 0.979117379049163 0.0861092120591369;0.975562181188378 0.980075424348599 0.0849888907565838;0.975894734504693 0.981033469648036 0.0838685694540308;0.976229559160644 0.981989243607836 0.0827459768118415;0.97656477958032 0.982944621803912 0.0816229884059277;0.976899999999996 0.983899999999988 0.0805000000000139],...
% %    'ContextMenu');
% colormap("jet");
% colorbar; %Color to Energy - legende
% 
% 
% %Get the current color limits.
% %lim = caxis;
% %Hold the current color limits using the 'manual' option - than set colors
% %caxis('manual');
% 
% %dark blue for lowest Energy consumption, fire red for highest Energy consumption
% caxis([26.9 27.4]) %set scaling for color mapping
% 
% hold on % hold on preserves existings plots
% 
% 
% 
% %surf(XX,YY,ZZ,'LineStyle','none') % for background colour 
% surface=surf(XX,YY,vEstimated);
% %surface.FaceAlpha = 0.3; %make the object semi-transparent
% surface.FaceAlpha = 0.9; % no transparency 
% surface.EdgeColor ='#7F7F7F'; %light grey
% surface.LineWidth = 0.1;
% surface.EdgeAlpha =0.5; % semitransparent edges
% title('Lowest Energy Consumption - DSE');
% xlabel('Frequency FPGA');
% ylabel('Frequency CPU');
% legend('Observed data','Estimated Energy Consumption','Location','NorthWest');
% 
% 
% %mesh(xq,yq,z2)
% 
% 
% % mesh1=mesh(XX,YY,ZZ); % for data mesh
% % mesh1.FaceColor = 'flat'; %filled mesh
% 
% 
% 
% 
% 
% 
% % The following line demonstrates an alternative way to create a data tip.
% % datatip(mesh1,82.3863636363636,99.0056868686869,27.1515915047611);
% % Create datatip
% % datatip(mesh1,'DataIndex',8199);
% % 
% % % The following line demonstrates an alternative way to create a data tip.
% % % datatip(mesh1,57.9229797979798,71.1649191919192,27.1005837513201);
% % % Create datatip
% % datatip(mesh1,'DataIndex',5671);
% % 
% % % The following line demonstrates an alternative way to create a data tip.
% % % datatip(mesh1,88.2575757575758,43.3241515151515,27.1129519879481);
% % % Create datatip
% % datatip(mesh1,'DataIndex',8743);
% % 
% % % The following line demonstrates an alternative way to create a data tip.
% % % datatip(mesh1,76.5151515151515,23.4378888888889,27.0530852207022);
% % % Create datatip
% % datatip(mesh1,'DataIndex',7523);
% % 
% % % The following line demonstrates an alternative way to create a data tip.
% % % datatip(mesh1,5.08207070707071,54.261595959596,27.2180082197913);
% % % Create datatip
% % datatip(mesh1,'DataIndex',254);
% 
% % Uncomment the following line to preserve the X-limits of the axes
% % xlim(axes1,[0 100]);
% % Uncomment the following line to preserve the Y-limits of the axes
% % ylim(axes1,[0 100]);
% % Uncomment the following line to preserve the Z-limits of the axes
% % zlim(axes1,[26.8 27.8]);
% 
% 
% %hold on retains plots in the current axes so that new plots added to the axes do not delete existing plots. New plots use the next colors and line styles based on the ColorOrder and LineStyleOrder properties of the axes. MATLAB® adjusts axes limits, tick marks, and tick labels to display the full range of data. If axes do not exist, then the hold command creates them.
% %hold off sets the hold state to off so that new plots added to the axes clear existing plots and reset all axes properties. The next plot added to the axes uses the first color and line style based on the ColorOrder and LineStyleOrder properties of the axes. This option is the default behavior.
% hold off % hold on preserves existings plots
% 
% 
% 
% 
% % axes1 = axes('Parent',Parent1);
% % hold(axes1,'on');
% % 
% % % Create mesh
% % mesh(xdata1,ydata1,ZZ1);
% % 
% % % Uncomment the following line to preserve the X-limits of the axes
% % % xlim(axes1,[0.703460866754706 91.6125517758456]);
% % % Uncomment the following line to preserve the Y-limits of the axes
% % % ylim(axes1,[3.95290582830256 94.8619967373935]);
% % % Uncomment the following line to preserve the Z-limits of the axes
% % % zlim(axes1,[26.806396484375 27.7154873934659]);
% % view(axes1,[51.2874996550697 9.6236133858708]);
% % grid(axes1,'on');
% % hold(axes1,'off');
% % % Set the remaining axes properties
% % set(axes1,'ContextMenu');
% 
% 
% 
% %damit macht man plot der observed werte (mo bedeutet magenta o - Kringel
% %um Punkte) und mesh() !!!!!! macht dann die interpolierten Werte!!!!!!
% %besser mesh als surf?!?!?
% %figure
% %plot3(FrequencyFPGA,FrequencyCPU,Energy,'mo')
% %hold on
% %mesh(xq,yq,z2)
% % title('v4')
% % legend('Measured Energy','Interpolated Surface','Location','NorthWest')
% % xlabel('Frequency FPGA');
% % ylabel('Frequency CPU');
% 
% 
% 
% % 
% % [xq,yq] = meshgrid(0:.1:100, 0:.1:100);
% % figure
% % vqnatural = griddata(FrequencyFPGA,FrequencyCPU,Energy,xq,yq,'natural');  %  method can be 'linear', 'nearest', 'natural', 'cubic', or 'v4'
% % mesh(xq,yq,vqnatural);
% % hold on;
% % xlabel('Frequency FPGA');
% % ylabel('Frequency CPU');
% % title('Natural');
% % plot3(FrequencyFPGA,FrequencyCPU,Energy,'o');
% 
% 
% 
% 
% %Explore Design Space and plot the results.
% 
% %figure
% %vEnergyEstimated = Energy_Consumption_Estimation_Model(xCPUFreq,yFPGAFreq);
% %surf: Surface-Plot
% %surf(xCPUFreq,yFPGAFreq,vEnergyEstimated);
% 
% N=min(min(vEstimated));
% 
% 
% %Find best Design
% %N=min(min(vEnergyEstimated));
% [row,col]=find(vEstimated==N);
% minEnergy_FPGAFrequency=xCPUFreq(row,col);
% minEnergy_CPUVFrequency=yFPGAFreq(row,col);
% fprintf('DSE with scatteredInterpolant Energy_Consumption_Estimation_Model algorithm succeded\n'); 
% %fprintf('Minimum energy consumption is %8.5f Joule estimated at CPU/FPGA frequency combination: %8.3f Mhz / %8.3f Mhz \n',N, minEnergy_CPUVFrequency,minEnergy_FPGAFrequency);
% 
% fprintf('DSE finished \n')
% 
% 
% 
% 
% [xq,yq] = meshgrid(0:.1:100, 0:.1:100);
% figure
% vqnatural = griddata(FrequencyFPGA,FrequencyCPU,Energy,xq,yq,'natural');  %  method can be 'linear', 'nearest', 'natural', 'cubic', or 'v4'
% mesh(xq,yq,vqnatural);
% hold on;
% xlabel('Frequency FPGA');
% ylabel('Frequency CPU');
% title('Natural');
% plot3(FrequencyFPGA,FrequencyCPU,Energy,'o');
% N=min(min(vqnatural));
% [row,col]=find(vqnatural==N);
% minFPGANatural=xq(row,col);
% minCPUNatural=yq(row,col);
% fprintf('DSE with NATURAL optimization algorithm succeded\n'); 
% %fprintf('Mminimum energy consumption is %8.5f Joule estimated at CPU/FPGA frequency combination: %8.3f Mhz / %8.3f Mhz \n',N, minCPUNatural,minFPGANatural);  

% %%
% figure;
% vq = griddata(FrequencyFPGA,FrequencyCPU,Energy,xq,yq,'cubic');  %  method can be 'linear', 'nearest', 'natural', 'cubic', or 'v4'
% mesh(xq,yq,vq);
% hold on;
% xlabel('Frequency FPGA');
% ylabel('Frequency CPU');
% title('Cubic');
% plot3(FrequencyFPGA,FrequencyCPU,Energy,'o');
% N=min(min(vq));
% [row,col]=find(vq==N);
% minFPGACubic=xq(row,col);
% minCPUCubic=yq(row,col);
% fprintf('DSE with cubic optimization algorithm succeded\n'); 
% fprintf('Mminimum energy consumption is %8.5f Joule estimated at CPU/FPGA frequency combination: %8.3f Mhz / %8.3f Mhz \n',N, minCPUCubic,minFPGACubic);  
% 

%% 
% 
% [xq,yq] = meshgrid(10:.1:90, 10:.1:90);
% z2 = griddata(FrequencyFPGA,FrequencyCPU,Energy,xq,yq,'v4');
% %z2.Points(0:20,90:100) = [];
% %z2.Values(0:20,90:100) = [];
% figure
% plot3(FrequencyFPGA,FrequencyCPU,Energy,'mo')
% hold on
% mesh(xq,yq,z2)
% title('v4')
% legend('Measured Energy','Interpolated Surface','Location','NorthWest')
% xlabel('Frequency FPGA');
% ylabel('Frequency CPU');
% N=min(min(z2));
% [row,col]=find(z2==N);
% minFPGAV4=xq(row,col);
% minCPUV4=yq(row,col);
% fprintf('DSE with v4 optimization algorithm succeded\n'); 
% fprintf('Mminimum energy consumption is %8.5f Joule estimated at CPU/FPGA frequency combination: %8.3f Mhz / %8.3f Mhz \n',N, minCPUV4,minFPGAV4);  
% %% 


%% 


% 
% [xq,yq] = meshgrid(6:100, 6:100);
% z2 = griddata(FrequencyFPGA,FrequencyCPU,Energy,xq,yq,'nearest');
% figure;
% plot3(FrequencyFPGA,FrequencyCPU,Energy,'mo');
% hold on;
% mesh(xq,yq,z2);
% title('Nearest Neighbor');
% xlabel('Frequency FPGA');
% ylabel('Frequency CPU');
% legend('Measured Energy','Interpolated Surface','Location','NorthWest');
% N=min(min(z2));
% %fprintf('Mminimum energy consumption is %8.5f Joule estimated at CPU/FPGA frequency combination: %8.3f Mhz / %8.3f Mhz \n',N, minCPUV4,minFPGAV4);  
% [row,col]=find(z2==N);
% minFPGANearest=xq(row,col);
% minCPUNearest=yq(row,col);
% %fprintf('DSE with - Nearest Neighbor - optimization algorithm succeded\n'); 
% %fprintf('Mminimum energy consumption is %8.5f Joule estimated at CPU/FPGA frequency combination: %8.3f Mhz / %8.3f Mhz \n',N, minCPUNearest,minFPGANearest);  
% fprintf('Nearest - Mminimum energy consumption is %8.5f Joule estimated at CPU/FPGA frequency combination: %8.3f Mhz / %8.3f Mhz \n',N, minCPUNearest(1,1),minFPGANearest(1,1));  
% fprintf('DSE beendet\n');

%%
% 
% %Creating Estimate energy consumption - Model:
%  %   For scattered data we use scatteredInterpolant and for data in regular griddata to fit Model with observed data
% Energy_Consumption_Estimation_Model = scatteredInterpolant(FrequencyCPU(:),FrequencyFPGA(:),Energy(:),'linear','linear');
% 
% 
% 
% %Create a grid of query points that extend Design Space beyond observed/measured Data
% %[xCPUFreq,yFPGAFreq] = ndgrid(1:100);
% [xCPUFreq,yFPGAFreq]= meshgrid(1:100);
% 
% %o plot the resulting surface, create a mesh in x-y space from the smallest to the largest values. 
% % Then plot the interpolated surface.
% %linspace Generates linearly spaced vector
% sgr = linspace(min(FrequencyCPU(:)),max(FrequencyCPU(:)))
% ygr = linspace(min(FrequencyFPGA(:)),max(FrequencyFPGA(:)))
% [XX,YY] = meshgrid(sgr,ygr);
% vEstimated = Energy_Consumption_Estimation_Model(XX,YY);
% 
% fig1= figure('Name','Energy Estimation Model');
% plot3(FrequencyFPGA,FrequencyCPU,Energy,'mo'); %plot circles around observed/measured values 
% 
% 
% 
% 
% %Using the geometry data, draw the teapot using the patch command. The patch command creates a patch object.
% % Create axes
% %axes1 = axes('Parent',fig1);
% %view(axes1,[70.4305573421952 10.5803274720121]);
% view([70.4305573421952 10.5803274720121]);
% 
% %view(axes1,[51.8200123152709 20.2518032786885]);
% %grid(axes1,'on');
% grid('on');
% hold('on');
% 
%  xlim([0.0 100.0])
%  ylim([0.0 100.0])
%  zlim([26.800 27.800])
% % 
% 
% 
% 
% % Set the remaining axes properties
% %set(axes1,'Colormap', [0.2422 0.1504 0.6603;0.252040973792314 0.168761336269031 0.71720917368096;0.260899731005021 0.188856809250486 0.770708627158244;0.268772254157556 0.208842457124636 0.822928477991375;0.274644976680434 0.232022327676547 0.867112775874636;0.278528290350664 0.258317226833293 0.901513838779559;0.280749628055151 0.285640913417153 0.928708209639213;0.28127814526644 0.312868520804989 0.950707992531179;0.279922433345481 0.339728656430191 0.968704954830742;0.27591527087585 0.366592917824749 0.982765144925292;0.268031037668043 0.394210065709022 0.991653635021866;0.253670194404964 0.422611667567622 0.996818079672822;0.228861268197279 0.451869505004859 0.998542992498785;0.199427186872368 0.481863229781139 0.990067985461208;0.183102590547052 0.509607867942177 0.978568451884921;0.1778213202796 0.535776556664035 0.963186847242468;0.173141794928329 0.561079641601879 0.942885944102284;0.157293639887026 0.585674603634192 0.925116214429462;0.146065464844509 0.608934920839407 0.908160381991011;0.13538149625243 0.631516884571388 0.8954294403618;0.118889373339812 0.653602412070781 0.883432609957078;0.101110714094388 0.674318716028911 0.865741730165816;0.0721675822299161 0.692958406709588 0.841876425813897;0.0269207502804102 0.709372426949708 0.813890300324952;0.00291612038386792 0.723847207531584 0.783476609037901;0.0229310641854951 0.736679239952826 0.751629960737569;0.0841239985200021 0.74797887654276 0.718497010066408;0.139743847685859 0.758297459885204 0.68446230901968;0.176455293537414 0.768775697534013 0.649231796825398;0.202996460901562 0.779507057293691 0.611175664751378;0.235466421647229 0.789264099611273 0.569242942844996;0.284937233339406 0.796600136287253 0.523637838890915;0.345453869302719 0.801038061038225 0.474677764637999;0.407928070645042 0.802885734669582 0.421244694178209;0.523859443735825 0.797734141156463 0.333465445719957;0.540795786179052 0.796194736514798 0.320510188066415;0.557619970344866 0.794558826170853 0.30751049353684;0.574341226010273 0.792821635843921 0.294495473257735;0.590949105461733 0.790913913244465 0.281581619152792;0.607466079181669 0.788840725335808 0.268933684461768;0.623896658766067 0.786639937457355 0.256579532069241;0.640205222736527 0.784287324166045 0.244679597457575;0.656346951357462 0.781746266881753 0.233506802009268;0.672339868291223 0.779115645854176 0.22283334540419;0.688171619806252 0.776406651904994 0.212662816340641;0.70367424746148 0.77361970051386 0.203243586863594;0.719007138345077 0.770780215910083 0.194168232914963;0.734169466974286 0.767888006984044 0.185420563412868;0.749062237872709 0.764912689848376 0.177130369910787;0.764138482686339 0.761802155790202 0.169759306078203;0.779858507729687 0.758495708186825 0.163172825196985;0.796833147076458 0.75486719024368 0.157592015367853;0.805572828130044 0.752992979478131 0.155266317025304;0.81097975490196 0.751832909663866 0.154110916929272;0.81373654300328 0.751241858574811 0.153845819770534;0.817048341007472 0.75052415904849 0.153666739962191;0.820823900064354 0.749699235435387 0.153587621130979;0.824887065396011 0.748806591346422 0.153605048844805;0.828927222942091 0.747913947257457 0.153767651570243;0.832952056066375 0.747021303168492 0.154068174091847;0.836959326977477 0.74614036624418 0.154468220708813;0.84094132902164 0.745282618511395 0.154979741170602;0.844888674911187 0.744458005663422 0.155631407520662;0.848822956687289 0.743638166244912 0.156343621008483;0.852745413637051 0.742820146386816 0.157112190173764;0.856642560496145 0.742005974820329 0.157988068334344;0.860517375530825 0.741202969166048 0.158919776055958;0.86437125521241 0.740410431188316 0.159905973900273;0.868194590785177 0.739633165264992 0.160976802767113;0.871985565203058 0.738872079919112 0.162158688650574;0.875757146622973 0.738120691072214 0.163410929399777;0.879510001168541 0.73737866566249 0.164734349716069;0.883210322066418 0.736662907076611 0.166317464399156;0.886892224995126 0.735960054397795 0.167988744834852;0.890556337158203 0.735271486913984 0.169743443362124;0.894177901307456 0.734624931847103 0.171688404616174;0.897768977167403 0.733998422242688 0.173739234691581;0.901321109990572 0.733394122098503 0.175915107702846;0.904795611840312 0.732829223386057 0.178325631469472;0.908237515497438 0.732290114987699 0.180862423467282;0.911654834219247 0.731773889555027 0.183501605900061;0.915044666172867 0.731285150890543 0.186259234325699;0.918386024887185 0.730844885465362 0.189163154001599;0.921696824748743 0.730435178892941 0.192149490714996;0.92497549743789 0.730055788682004 0.195216067455378;0.928192390625374 0.72972127707075 0.198396686827585;0.931374126968663 0.729411398566049 0.201634944771777;0.934527987998556 0.729128492712276 0.204912950284699;0.937649104614459 0.728891441481394 0.208226309810087;0.940742317439101 0.728707574236426 0.211556244827714;0.943829378246772 0.728565857801666 0.214859409077558;0.946916439054443 0.728471026112145 0.218115688582164;0.950003499862114 0.728439695144487 0.221260571476101;0.953090560669785 0.72843315159963 0.224284868865364;0.956177621477457 0.728452236429531 0.227186553243044;0.959264682285128 0.728520536289751 0.229906879269055;0.962351743092799 0.728685743449188 0.232398744793379;0.965434173478829 0.728919667949324 0.234719185999503;0.968503729033953 0.729223785606639 0.236847947705249;0.971538426407394 0.729615048718162 0.238697843957529;0.974532875004809 0.730081190010198 0.240392327269289;0.977479626407867 0.730629969880016 0.24194208507868;0.980164947329155 0.731572560403171 0.242978667082088;0.982745306104096 0.732594973417982 0.24369579148776;0.985204253211722 0.733702585640723 0.244038946089134;0.987394923682662 0.734981416827107 0.243555627078902;0.989426330153172 0.736355586593396 0.242763296173986;0.991334164696121 0.737802835948499 0.241756923602894;0.993094625364405 0.739336053397157 0.240529490219805;0.994370134924318 0.741047224653325 0.239102137932577;0.995375458044907 0.742852410404363 0.237588821597224;0.996129225830836 0.744742984477758 0.236006056025;0.996568238992616 0.746721148343438 0.234427059159761;0.996859021387305 0.748738773579822 0.232857677010251;0.997027651555082 0.750788684903241 0.231295286981965;0.997113879049932 0.75285926261304 0.229733159826276;0.997157156963524 0.754942457044516 0.228167274017864;0.99717182903676 0.757036587771214 0.226593777057153;0.997157450766348 0.759145073063414 0.225006000816849;0.997116663937608 0.761263687652366 0.223408095279794;0.997063057463816 0.763383717363658 0.221808774620398;0.996997854106556 0.765503747074951 0.220209453961002;0.996913390891507 0.767623776786243 0.218610133301606;0.996817184065266 0.769743806497535 0.21701081264221;0.996710626237441 0.77186511669536 0.215411491982814;0.99659211260539 0.773992497347856 0.213812171323419;0.996451253882221 0.776141473951392 0.2122132871128;0.996298561285346 0.778298029296085 0.210618552905757;0.996136793958542 0.780455252511084 0.209032225558339;0.995950304826194 0.782614367168998 0.207466837130632;0.995739610662051 0.784780354612896 0.205911908162755;0.995502542047799 0.786954606683503 0.204366824391568;0.995215116465939 0.789145542015863 0.202838731064483;0.994884791938459 0.791338633561702 0.20134922425606;0.994515632319855 0.793533732374596 0.199895220098838;0.994094513892384 0.795731673246612 0.198490332691363;0.993616900304443 0.797943333553166 0.197128221009817;0.993101903938953 0.800164417112672 0.195794468622114;0.992547855421144 0.802395648393869 0.194490390032259;0.991941808841503 0.804651460467074 0.19323689126533;0.991313076326432 0.806914789595784 0.192002252521619;0.990659335351725 0.80918362513417 0.190785608511271;0.989913152198287 0.811452921950419 0.189615416229219;0.989129105349574 0.813727098902116 0.188466595862528;0.988311273087308 0.816008158856376 0.187338109703896;0.987447718309341 0.818304459649203 0.186240105222398;0.986544381448966 0.820608392476314 0.185157364809466;0.985616341765951 0.822914389706141 0.184078753201967;0.98466365444994 0.825220386935967 0.183000141594467;0.98367768717109 0.827526384165794 0.181911250034118;0.982665957345882 0.82983238139562 0.180810106054716;0.981629936195095 0.832138378625447 0.179697558729622;0.980575180708304 0.834444375855274 0.178581753618416;0.979504775068686 0.836751412310775 0.177464909281535;0.978422336048217 0.83906250621618 0.17634400749475;0.977327000605392 0.841385227281332 0.175211478548219;0.976219501507944 0.843721329375474 0.17406435119833;0.975121251408235 0.846055009396068 0.172912818997797;0.9740428005354 0.848379523010416 0.171759820382883;0.973008253672462 0.85068635646406 0.170611093612214;0.971994269239157 0.852992353693887 0.169471811832545;0.971000299449573 0.855298623829615 0.168342400921785;0.970037237127408 0.857607264835368 0.167227258309722;0.969125303194225 0.859932053867289 0.166129605879067;0.96824772266937 0.862266368183852 0.165043617625035;0.967399905235436 0.864606142675061 0.163967550401311;0.966621189973191 0.866923997050286 0.162914911189646;0.965875198823547 0.869234334302673 0.161876419058076;0.965156429483794 0.8715403315325 0.160851734777207;0.964496055728236 0.873846328762327 0.1598659808858;0.963863274408404 0.876152325992153 0.15889670648061;0.96325730608007 0.87845832322198 0.157942682224448;0.962689730760494 0.880764320451806 0.157006753752193;0.962164288773109 0.883070317681633 0.156074972807518;0.961678426013874 0.88537631491146 0.155145034309895;0.961249718186978 0.887682312141286 0.154215196717223;0.960887503808199 0.889975822922764 0.153285359124551;0.960571854304637 0.89225840842648 0.15235535366465;0.960303811851092 0.894529034059804 0.151425115773199;0.960078919631532 0.896780173933911 0.150459790474269;0.959880586318711 0.899022119704722 0.149469315885555;0.959711855214992 0.90125934445883 0.148452599117021;0.959601127554881 0.903509764645849 0.147391944623117;0.959553615272443 0.905766312863327 0.14628475821541;0.959546416787869 0.908015119910025 0.145148956424782;0.959576509403191 0.910239066223459 0.14398829390089;0.959646915514486 0.912444049634615 0.142791712556782;0.95974571698445 0.914654280688256 0.141548569108879;0.959873421395875 0.916877937448081 0.140250681855404;0.960051358470954 0.919324182981924 0.138771214272076;0.960189598905579 0.920916196709427 0.137789146194494;0.960299920823843 0.921907432023678 0.137156897549525;0.960410242742107 0.922898667337929 0.136524648904557;0.960531970030115 0.923886100862266 0.135884796679758;0.960657799249347 0.924872167076194 0.135242209834144;0.960783628468579 0.925858233290122 0.13459962298853;0.960935417681144 0.92683564617294 0.133939729480694;0.961090617695752 0.927811922121742 0.133277562104828;0.961246218039239 0.928788064627586 0.132615127843044;0.961413828249077 0.929760203844646 0.131944687003693;0.961581438458915 0.930732343061705 0.131274246164341;0.961751561891311 0.931706995501323 0.130596265657314;0.961933084583169 0.932693047200403 0.129884087371902;0.962114607275027 0.933679098899483 0.12917190908649;0.962298034338383 0.934665604304625 0.128455951907165;0.96248534482597 0.935653034914286 0.127732288748097;0.962672655313556 0.936640465523947 0.12700862558903;0.962868967441789 0.937623395313285 0.126275960789316;0.963075132717215 0.938601398529027 0.125533442842408;0.963281297992641 0.939579401744768 0.124790924895501;0.963495272794864 0.94055350019711 0.124040362386605;0.963713917211049 0.941525263842472 0.123284989727241;0.963932561627234 0.942497027487834 0.122529617067878;0.964166797799734 0.943460995255039 0.121750856774041;0.964405581567826 0.944422689224447 0.120965275086817;0.964644365335918 0.945384383193855 0.120179693399592;0.964894802724481 0.946340250353028 0.119376631281661;0.965146218039238 0.947295628549104 0.118572102274439;0.965398949803906 0.948251664970136 0.117764940367394;0.96566891509469 0.949216318154225 0.116923311408118;0.965938880385474 0.950180971338314 0.116081682448842;0.966212239318005 0.951147157173321 0.115233156759434;0.966497675622637 0.952118797442473 0.114360086824554;0.966783111927269 0.953090437711625 0.113487016889675;0.967071023598799 0.954059602613879 0.112606520854101;0.967363191164293 0.955024511622169 0.111713257136633;0.967655358729788 0.955989420630458 0.110819993419165;0.967952445424167 0.956949410509863 0.109911972315045;0.968254143801875 0.957904788705939 0.108990116160936;0.968555842179584 0.958860166902015 0.108068260006828;0.968862421104773 0.959820425645572 0.107122001115313;0.969171463995681 0.960783148354848 0.106163422395204;0.969480506886589 0.961745871064124 0.105204843675096;0.969796260553696 0.962715304549598 0.104212711073998;0.97011355876453 0.9636862825788 0.103212855754259;0.970430856975364 0.964657260608002 0.102213000434521;0.970749271424849 0.965624896897744 0.101194189987201;0.971067730823541 0.966592398620797 0.100174616246154;0.971386190222232 0.967558570666698 0.0991510534736497;0.971704649620925 0.968513948862774 0.0980951091516711;0.972023109019617 0.96946932705885 0.0970391648296925;0.972341568418308 0.970425817747809 0.0959798830290648;0.972660027817 0.971385506853806 0.0949110059773209;0.972978487215692 0.972345195959804 0.0938421289255769;0.973296946614384 0.973309449868512 0.0927595574657018;0.973615406013076 0.974280369838321 0.0916569878225237;0.973933865411768 0.97525128980813 0.0905544181793457;0.974254662309711 0.97622054876426 0.0894474815802028;0.974577334643099 0.977188475046623 0.0883370412605766;0.974900006976487 0.978156401328987 0.0872266009409503;0.975229627872063 0.979117379049163 0.0861092120591369;0.975562181188378 0.980075424348599 0.0849888907565838;0.975894734504693 0.981033469648036 0.0838685694540308;0.976229559160644 0.981989243607836 0.0827459768118415;0.97656477958032 0.982944621803912 0.0816229884059277;0.976899999999996 0.983899999999988 0.0805000000000139],...
% %    'ContextMenu');
% colormap("jet");
% colorbar; %Color to Energy - legende
% 
% 
% %Get the current color limits.
% %lim = caxis;
% %Hold the current color limits using the 'manual' option - than set colors
% %caxis('manual');
% 
% %dark blue for lowest Energy consumption, fire red for highest Energy consumption
% caxis([26.9 27.4]) %set scaling for color mapping
% 
% hold on % hold on preserves existings plots
% 
% 
% 
% %surf(XX,YY,ZZ,'LineStyle','none') % for background colour 
% surface=surf(XX,YY,vEstimated);
% %surface.FaceAlpha = 0.3; %make the object semi-transparent
% surface.FaceAlpha = 0.9; % no transparency 
% surface.EdgeColor ='#7F7F7F'; %light grey
% surface.LineWidth = 0.1;
% surface.EdgeAlpha =0.5; % semitransparent edges
% title('Lowest Energy Consumption - DSE');
% xlabel('Frequency FPGA');
% ylabel('Frequency CPU');
% legend('Observed data','Estimated Energy Consumption','Location','NorthWest');
% 
% 
% %mesh(xq,yq,z2)
% 
% 
% % mesh1=mesh(XX,YY,ZZ); % for data mesh
% % mesh1.FaceColor = 'flat'; %filled mesh
% 
% 
% 
% 
% 
% 
% % The following line demonstrates an alternative way to create a data tip.
% % datatip(mesh1,82.3863636363636,99.0056868686869,27.1515915047611);
% % Create datatip
% % datatip(mesh1,'DataIndex',8199);
% % 
% % % The following line demonstrates an alternative way to create a data tip.
% % % datatip(mesh1,57.9229797979798,71.1649191919192,27.1005837513201);
% % % Create datatip
% % datatip(mesh1,'DataIndex',5671);
% % 
% % % The following line demonstrates an alternative way to create a data tip.
% % % datatip(mesh1,88.2575757575758,43.3241515151515,27.1129519879481);
% % % Create datatip
% % datatip(mesh1,'DataIndex',8743);
% % 
% % % The following line demonstrates an alternative way to create a data tip.
% % % datatip(mesh1,76.5151515151515,23.4378888888889,27.0530852207022);
% % % Create datatip
% % datatip(mesh1,'DataIndex',7523);
% % 
% % % The following line demonstrates an alternative way to create a data tip.
% % % datatip(mesh1,5.08207070707071,54.261595959596,27.2180082197913);
% % % Create datatip
% % datatip(mesh1,'DataIndex',254);
% 
% % Uncomment the following line to preserve the X-limits of the axes
% % xlim(axes1,[0 100]);
% % Uncomment the following line to preserve the Y-limits of the axes
% % ylim(axes1,[0 100]);
% % Uncomment the following line to preserve the Z-limits of the axes
% % zlim(axes1,[26.8 27.8]);
% 
% 
% %hold on retains plots in the current axes so that new plots added to the axes do not delete existing plots. New plots use the next colors and line styles based on the ColorOrder and LineStyleOrder properties of the axes. MATLAB® adjusts axes limits, tick marks, and tick labels to display the full range of data. If axes do not exist, then the hold command creates them.
% %hold off sets the hold state to off so that new plots added to the axes clear existing plots and reset all axes properties. The next plot added to the axes uses the first color and line style based on the ColorOrder and LineStyleOrder properties of the axes. This option is the default behavior.
% hold off % hold on preserves existings plots
% 
% 
% 
% 
% % axes1 = axes('Parent',Parent1);
% % hold(axes1,'on');
% % 
% % % Create mesh
% % mesh(xdata1,ydata1,ZZ1);
% % 
% % % Uncomment the following line to preserve the X-limits of the axes
% % % xlim(axes1,[0.703460866754706 91.6125517758456]);
% % % Uncomment the following line to preserve the Y-limits of the axes
% % % ylim(axes1,[3.95290582830256 94.8619967373935]);
% % % Uncomment the following line to preserve the Z-limits of the axes
% % % zlim(axes1,[26.806396484375 27.7154873934659]);
% % view(axes1,[51.2874996550697 9.6236133858708]);
% % grid(axes1,'on');
% % hold(axes1,'off');
% % % Set the remaining axes properties
% % set(axes1,'ContextMenu');
% 
% 
% 
% %damit macht man plot der observed werte (mo bedeutet magenta o - Kringel
% %um Punkte) und mesh() !!!!!! macht dann die interpolierten Werte!!!!!!
% %besser mesh als surf?!?!?
% %figure
% %plot3(FrequencyFPGA,FrequencyCPU,Energy,'mo')
% %hold on
% %mesh(xq,yq,z2)
% % title('v4')
% % legend('Measured Energy','Interpolated Surface','Location','NorthWest')
% % xlabel('Frequency FPGA');
% % ylabel('Frequency CPU');
% 
% 
% 
% % 
% % [xq,yq] = meshgrid(0:.1:100, 0:.1:100);
% % figure
% % vqnatural = griddata(FrequencyFPGA,FrequencyCPU,Energy,xq,yq,'natural');  %  method can be 'linear', 'nearest', 'natural', 'cubic', or 'v4'
% % mesh(xq,yq,vqnatural);
% % hold on;
% % xlabel('Frequency FPGA');
% % ylabel('Frequency CPU');
% % title('Natural');
% % plot3(FrequencyFPGA,FrequencyCPU,Energy,'o');
% 
% 
% 
% 
% %Explore Design Space and plot the results.
% 
% %figure
% %vEnergyEstimated = Energy_Consumption_Estimation_Model(xCPUFreq,yFPGAFreq);
% %surf: Surface-Plot
% %surf(xCPUFreq,yFPGAFreq,vEnergyEstimated);
% 
% N=min(min(vEstimated));
% 
% 
% %Find best Design
% %N=min(min(vEnergyEstimated));
% [row,col]=find(vEstimated==N);
% minEnergy_FPGAFrequency=xCPUFreq(row,col);
% minEnergy_CPUVFrequency=yFPGAFreq(row,col);
% fprintf('DSE with scatteredInterpolant Energy_Consumption_Estimation_Model algorithm succeded\n'); 
% %fprintf('Minimum energy consumption is %8.5f Joule estimated at CPU/FPGA frequency combination: %8.3f Mhz / %8.3f Mhz \n',N, minEnergy_CPUVFrequency,minEnergy_FPGAFrequency);
% 
% fprintf('DSE finished \n')
